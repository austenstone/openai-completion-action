name: OpenAI Completion Slash Command

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: "The prompt to generate completions for."
        required: true
  workflow_call:
    inputs:
      prompt:
        description: "The prompt to generate completions for."
        required: true
        type: string

jobs:
  dump_contexts_to_log:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
  openai_completion_job:
    runs-on: ubuntu-latest
    name: OpenAI
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        name: OpenAI Completion
        id: openai_completion
        with:
          prompt: ${{ github.event.inputs.prompt }}
          max_tokens: 64
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - uses: actions/github-script@v6
        name: Print the response text
        with:
          script: core.notice('${{github.event.inputs.prompt}}' + '\n\n' + JSON.parse(${{ toJSON(steps.openai_completion.outputs.response) }}).choices[0].message.content)
  issue_respond:
    if: ${{ github.event_name == 'workflow_call' }}
    runs-on: ubuntu-latest
    needs: [openai_completion_job]
    steps:
      - uses: actions/github-script@v6
        name: Print the response text
        with:
          script: |
            const text = JSON.parse(${{ toJSON(steps.openai_completion.outputs.response) }}).choices[0].message.content
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: text
            });